// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * requester/module.go: transpiled from lib/requester.py
 */

package requester

import (
	Ωerror "github.com/tenta-browser/go-video-downloader/gen/urllib/error"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	Ωnet "github.com/tenta-browser/go-video-downloader/lib/net"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	HTTPError    λ.Object
	Response     λ.Object
	URLError     λ.Object
	ϒdo          λ.Object
	ϒstd_headers λ.Object
)

func init() {
	λ.InitModule(func() {
		HTTPError = Ωerror.HTTPError
		URLError = Ωerror.URLError
		ϒstd_headers = Ωutils.ϒstd_headers
		ϒdo = λ.NewFunction("do",
			[]λ.Param{
				{Name: "client"},
				{Name: "req"},
			},
			0, false, false,
			func(λargs []λ.Object) λ.Object {
				var (
					ϒclient   = λargs[0]
					ϒerr      λ.Object
					ϒheaders  λ.Object
					ϒreq      = λargs[1]
					ϒres      λ.Object
					ϒres_info λ.Object
					τmp0      λ.Object
				)
				ϒheaders = λ.DictLiteral(map[λ.Object]λ.Object{})
				λ.Calm(ϒheaders, "update", ϒstd_headers)
				λ.Calm(ϒheaders, "update", λ.GetAttr(ϒreq, "headers", nil))
				τmp0 = λ.UnpackIterable(λ.Cal(Ωnet.Execute, ϒclient, λ.Calm(ϒreq, "get_method"), λ.GetAttr(ϒreq, "url", nil), λ.GetAttr(ϒreq, "data", nil), ϒheaders), 2)
				ϒres_info = λ.GetItem(τmp0, λ.IntLiteral(0))
				ϒerr = λ.GetItem(τmp0, λ.IntLiteral(1))
				if λ.IsTrue(ϒerr) {
					panic(λ.Raise(λ.Cal(URLError, ϒerr)))
				}
				ϒres = λ.Cal(Response, λ.Unpack(λ.AsStarred(ϒres_info))...)
				if λ.IsTrue(λ.Ne(λ.GetAttr(ϒres, "status", nil), λ.IntLiteral(200))) {
					panic(λ.Raise(λ.Cal(HTTPError, λ.GetAttr(ϒres, "url", nil), λ.GetAttr(ϒres, "status", nil), λ.GetAttr(ϒres, "msg", nil), ϒheaders, ϒres)))
				}
				return ϒres
			})
		Response = λ.Cal(λ.TypeType, λ.StrLiteral("Response"), λ.NewTuple(), func() λ.Dict {
			var (
				Response___init__ λ.Object
				Response_geturl   λ.Object
				Response_read     λ.Object
			)
			Response___init__ = λ.NewFunction("__init__",
				[]λ.Param{
					{Name: "self"},
					{Name: "native_res"},
					{Name: "url"},
					{Name: "status"},
					{Name: "msg"},
					{Name: "headers"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒheaders    = λargs[5]
						ϒmsg        = λargs[4]
						ϒnative_res = λargs[1]
						ϒself       = λargs[0]
						ϒstatus     = λargs[3]
						ϒurl        = λargs[2]
					)
					λ.SetAttr(ϒself, "native_res", ϒnative_res)
					λ.SetAttr(ϒself, "url", ϒurl)
					λ.SetAttr(ϒself, "status", ϒstatus)
					λ.SetAttr(ϒself, "msg", ϒmsg)
					λ.SetAttr(ϒself, "headers", ϒheaders)
					return λ.None
				})
			Response_read = λ.NewFunction("read",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdata λ.Object
						ϒerr  λ.Object
						ϒself = λargs[0]
						τmp0  λ.Object
					)
					τmp0 = λ.UnpackIterable(λ.Cal(Ωnet.ReadResponseBody, λ.GetAttr(ϒself, "native_res", nil)), 2)
					ϒdata = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒerr = λ.GetItem(τmp0, λ.IntLiteral(1))
					if λ.IsTrue(ϒerr) {
						panic(λ.Raise(λ.Cal(URLError, ϒerr)))
					}
					return ϒdata
				})
			Response_geturl = λ.NewFunction("geturl",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					return λ.GetAttr(ϒself, "url", nil)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"__init__": Response___init__,
				"geturl":   Response_geturl,
				"read":     Response_read,
			})
		}())
	})
}
