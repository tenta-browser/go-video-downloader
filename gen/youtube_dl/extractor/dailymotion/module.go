// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * dailymotion/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/dailymotion.py
 */

package dailymotion

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	DailymotionBaseInfoExtractor λ.Object
	DailymotionIE                λ.Object
	DailymotionPlaylistBaseIE    λ.Object
	DailymotionPlaylistIE        λ.Object
	DailymotionUserIE            λ.Object
	ExtractorError               λ.Object
	InfoExtractor                λ.Object
	ϒclean_html                  λ.Object
	ϒint_or_none                 λ.Object
	ϒtry_get                     λ.Object
	ϒunescapeHTML                λ.Object
	ϒurlencode_postdata          λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒclean_html = Ωutils.ϒclean_html
		ExtractorError = Ωutils.ExtractorError
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ϒunescapeHTML = Ωutils.ϒunescapeHTML
		ϒurlencode_postdata = Ωutils.ϒurlencode_postdata
		DailymotionBaseInfoExtractor = λ.Cal(λ.TypeType, λ.StrLiteral("DailymotionBaseInfoExtractor"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				DailymotionBaseInfoExtractor__get_dailymotion_cookies λ.Object
				DailymotionBaseInfoExtractor__real_initialize         λ.Object
			)
			DailymotionBaseInfoExtractor__get_dailymotion_cookies = λ.NewFunction("_get_dailymotion_cookies",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					return λ.Calm(ϒself, "_get_cookies", λ.StrLiteral("https://www.dailymotion.com/"))
				})
			DailymotionBaseInfoExtractor__real_initialize = λ.NewFunction("_real_initialize",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcookies λ.Object
						ϒff      λ.Object
						ϒself    = λargs[0]
					)
					ϒcookies = λ.Calm(ϒself, "_get_dailymotion_cookies")
					ϒff = λ.Calm(ϒself, "_get_cookie_value", ϒcookies, λ.StrLiteral("ff"))
					λ.SetAttr(ϒself, "_FAMILY_FILTER", func() λ.Object {
						if λ.IsTrue(ϒff) {
							return λ.Eq(ϒff, λ.StrLiteral("on"))
						} else {
							return λ.Cal(λ.None, λ.IntLiteral(18), λ.Calm(λ.GetAttr(λ.GetAttr(ϒself, "_downloader", nil), "params", nil), "get", λ.StrLiteral("age_limit")))
						}
					}())
					λ.Calm(ϒself, "_set_dailymotion_cookie", λ.StrLiteral("ff"), func() λ.Object {
						if λ.IsTrue(λ.GetAttr(ϒself, "_FAMILY_FILTER", nil)) {
							return λ.StrLiteral("on")
						} else {
							return λ.StrLiteral("off")
						}
					}())
					return λ.None
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_get_dailymotion_cookies": DailymotionBaseInfoExtractor__get_dailymotion_cookies,
				"_real_initialize":         DailymotionBaseInfoExtractor__real_initialize,
			})
		}())
		DailymotionIE = λ.Cal(λ.TypeType, λ.StrLiteral("DailymotionIE"), λ.NewTuple(DailymotionBaseInfoExtractor), func() λ.Dict {
			var (
				DailymotionIE__GEO_BYPASS   λ.Object
				DailymotionIE__VALID_URL    λ.Object
				DailymotionIE__extract_urls λ.Object
			)
			DailymotionIE__VALID_URL = λ.StrLiteral("(?ix)\n                    https?://\n                        (?:\n                            (?:(?:www|touch)\\.)?dailymotion\\.[a-z]{2,3}/(?:(?:(?:embed|swf|\\#)/)?video|swf)|\n                            (?:www\\.)?lequipe\\.fr/video\n                        )\n                        /(?P<id>[^/?_]+)(?:.+?\\bplaylist=(?P<playlist_id>x[0-9a-z]+))?\n                    ")
			DailymotionIE__GEO_BYPASS = λ.False
			DailymotionIE__extract_urls = λ.NewFunction("_extract_urls",
				[]λ.Param{
					{Name: "webpage"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒmobj    λ.Object
						ϒurls    λ.Object
						ϒwebpage = λargs[0]
						τmp0     λ.Object
						τmp1     λ.Object
					)
					ϒurls = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(Ωre.ϒfinditer, λ.StrLiteral("<(?:(?:embed|iframe)[^>]+?src=|input[^>]+id=[\\'\"]dmcloudUrlEmissionSelect[\\'\"][^>]+value=)([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?dailymotion\\.com/(?:embed|swf)/video/.+?)\\1"), ϒwebpage))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒmobj = τmp1
						λ.Calm(ϒurls, "append", λ.Cal(ϒunescapeHTML, λ.Calm(ϒmobj, "group", λ.StrLiteral("url"))))
					}
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(Ωre.ϒfinditer, λ.StrLiteral("(?s)DM\\.player\\([^,]+,\\s*{.*?video[\\'\"]?\\s*:\\s*[\"\\']?(?P<id>[0-9a-zA-Z]+).+?}\\s*\\);"), ϒwebpage))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒmobj = τmp1
						λ.Calm(ϒurls, "append", λ.Add(λ.StrLiteral("https://www.dailymotion.com/embed/video/"), λ.Calm(ϒmobj, "group", λ.StrLiteral("id"))))
					}
					return ϒurls
				})
			DailymotionIE__extract_urls = λ.Cal(λ.StaticMethodType, DailymotionIE__extract_urls)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_GEO_BYPASS":   DailymotionIE__GEO_BYPASS,
				"_VALID_URL":    DailymotionIE__VALID_URL,
				"_extract_urls": DailymotionIE__extract_urls,
			})
		}())
		DailymotionPlaylistBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("DailymotionPlaylistBaseIE"), λ.NewTuple(DailymotionBaseInfoExtractor), func() λ.Dict {

			return λ.ClassDictLiteral(map[λ.Object]λ.Object{})
		}())
		DailymotionPlaylistIE = λ.Cal(λ.TypeType, λ.StrLiteral("DailymotionPlaylistIE"), λ.NewTuple(DailymotionPlaylistBaseIE), func() λ.Dict {
			var (
				DailymotionPlaylistIE__VALID_URL λ.Object
			)
			DailymotionPlaylistIE__VALID_URL = λ.StrLiteral("(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/playlist/(?P<id>x[0-9a-z]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": DailymotionPlaylistIE__VALID_URL,
			})
		}())
		DailymotionUserIE = λ.Cal(λ.TypeType, λ.StrLiteral("DailymotionUserIE"), λ.NewTuple(DailymotionPlaylistBaseIE), func() λ.Dict {
			var (
				DailymotionUserIE__VALID_URL λ.Object
			)
			DailymotionUserIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?dailymotion\\.[a-z]{2,3}/(?!(?:embed|swf|#|video|playlist)/)(?:(?:old/)?user/)?(?P<id>[^/]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": DailymotionUserIE__VALID_URL,
			})
		}())
	})
}
