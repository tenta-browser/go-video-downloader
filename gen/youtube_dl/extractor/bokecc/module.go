// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * bokecc/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/bokecc.py
 */

package bokecc

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	BokeCCBaseIE     λ.Object
	BokeCCIE         λ.Object
	ExtractorError   λ.Object
	InfoExtractor    λ.Object
	ϒcompat_parse_qs λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_parse_qs = Ωcompat.ϒcompat_parse_qs
		ExtractorError = Ωutils.ExtractorError
		BokeCCBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("BokeCCBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {

			return λ.ClassDictLiteral(map[λ.Object]λ.Object{})
		}())
		BokeCCIE = λ.Cal(λ.TypeType, λ.StrLiteral("BokeCCIE"), λ.NewTuple(BokeCCBaseIE), func() λ.Dict {
			var (
				BokeCCIE__VALID_URL λ.Object
			)
			BokeCCIE__VALID_URL = λ.StrLiteral("https?://union\\.bokecc\\.com/playvideo\\.bo\\?(?P<query>.*)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": BokeCCIE__VALID_URL,
			})
		}())
	})
}
