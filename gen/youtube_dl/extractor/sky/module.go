// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * sky/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/sky.py
 */

package sky

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor       λ.Object
	SkyBaseIE           λ.Object
	SkyNewsIE           λ.Object
	SkySportsIE         λ.Object
	SkySportsNewsIE     λ.Object
	ϒextract_attributes λ.Object
	ϒsmuggle_url        λ.Object
	ϒstrip_or_none      λ.Object
	ϒurljoin            λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒextract_attributes = Ωutils.ϒextract_attributes
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒstrip_or_none = Ωutils.ϒstrip_or_none
		ϒurljoin = Ωutils.ϒurljoin
		SkyBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("SkyBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				SkyBaseIE_BRIGHTCOVE_URL_TEMPLATE λ.Object
				SkyBaseIE__SDC_EL_REGEX           λ.Object
				SkyBaseIE__process_ooyala_element λ.Object
				SkyBaseIE__real_extract           λ.Object
			)
			SkyBaseIE_BRIGHTCOVE_URL_TEMPLATE = λ.StrLiteral("http://players.brightcove.net/%s/%s_default/index.html?videoId=%s")
			SkyBaseIE__SDC_EL_REGEX = λ.StrLiteral("(?s)(<div[^>]+data-(?:component-name|fn)=\"sdc-(?:articl|sit)e-video\"[^>]*>)")
			SkyBaseIE__process_ooyala_element = λ.NewFunction("_process_ooyala_element",
				[]λ.Param{
					{Name: "self"},
					{Name: "webpage"},
					{Name: "sdc_el"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒaccount_id      λ.Object
						ϒembed_token     λ.Object
						ϒie_key          λ.Object
						ϒooyala_attrs    λ.Object
						ϒooyala_el       λ.Object
						ϒplayer_id       λ.Object
						ϒprovider        λ.Object
						ϒsdc             λ.Object
						ϒsdc_el          = λargs[2]
						ϒself            = λargs[0]
						ϒtoken_fetch_url λ.Object
						ϒurl             = λargs[3]
						ϒvideo_id        λ.Object
						ϒvideo_url       λ.Object
						ϒwebpage         = λargs[1]
					)
					ϒsdc = λ.Cal(ϒextract_attributes, ϒsdc_el)
					ϒprovider = λ.Calm(ϒsdc, "get", λ.StrLiteral("data-provider"))
					if λ.IsTrue(λ.Eq(ϒprovider, λ.StrLiteral("ooyala"))) {
						ϒvideo_id = λ.GetItem(ϒsdc, λ.StrLiteral("data-sdc-video-id"))
						ϒvideo_url = λ.Mod(λ.StrLiteral("ooyala:%s"), ϒvideo_id)
						ϒie_key = λ.StrLiteral("Ooyala")
						ϒooyala_el = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.Mod(λ.StrLiteral("(<div[^>]+class=\"[^\"]*\\bsdc-article-video__media-ooyala\\b[^\"]*\"[^>]+data-video-id=\"%s\"[^>]*>)"), ϒvideo_id),
							ϒwebpage,
							λ.StrLiteral("video data"),
						), λ.KWArgs{
							{Name: "fatal", Value: λ.False},
						})
						if λ.IsTrue(ϒooyala_el) {
							ϒooyala_attrs = func() λ.Object {
								if λv := λ.Cal(ϒextract_attributes, ϒooyala_el); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.DictLiteral(map[λ.Object]λ.Object{})
								}
							}()
							if λ.IsTrue(λ.Eq(λ.Calm(ϒooyala_attrs, "get", λ.StrLiteral("data-token-required")), λ.StrLiteral("true"))) {
								ϒtoken_fetch_url = λ.Calm(func() λ.Object {
									if λv := λ.Call(λ.GetAttr(ϒself, "_parse_json", nil), λ.NewArgs(
										λ.Calm(ϒooyala_attrs, "get", λ.StrLiteral("data-token-fetch-options"), λ.StrLiteral("{}")),
										ϒvideo_id,
									), λ.KWArgs{
										{Name: "fatal", Value: λ.False},
									}); λ.IsTrue(λv) {
										return λv
									} else {
										return λ.DictLiteral(map[λ.Object]λ.Object{})
									}
								}(), "get", λ.StrLiteral("url"))
								if λ.IsTrue(ϒtoken_fetch_url) {
									ϒembed_token = λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
										λ.Cal(ϒurljoin, ϒurl, ϒtoken_fetch_url),
										ϒvideo_id,
									), λ.KWArgs{
										{Name: "fatal", Value: λ.False},
									})
									if λ.IsTrue(ϒembed_token) {
										ϒvideo_url = λ.Cal(ϒsmuggle_url, ϒvideo_url, λ.DictLiteral(map[string]λ.Object{
											"embed_token": ϒembed_token,
										}))
									}
								}
							}
						}
					} else {
						if λ.IsTrue(λ.Eq(ϒprovider, λ.StrLiteral("brightcove"))) {
							ϒvideo_id = λ.GetItem(ϒsdc, λ.StrLiteral("data-video-id"))
							ϒaccount_id = func() λ.Object {
								if λv := λ.Calm(ϒsdc, "get", λ.StrLiteral("data-account-id")); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.StrLiteral("6058004172001")
								}
							}()
							ϒplayer_id = func() λ.Object {
								if λv := λ.Calm(ϒsdc, "get", λ.StrLiteral("data-player-id")); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.StrLiteral("RC9PQUaJ6")
								}
							}()
							ϒvideo_url = λ.Mod(λ.GetAttr(ϒself, "BRIGHTCOVE_URL_TEMPLATE", nil), λ.NewTuple(
								ϒaccount_id,
								ϒplayer_id,
								ϒvideo_id,
							))
							ϒie_key = λ.StrLiteral("BrightcoveNew")
						}
					}
					return λ.DictLiteral(map[string]λ.Object{
						"_type":  λ.StrLiteral("url_transparent"),
						"id":     ϒvideo_id,
						"url":    ϒvideo_url,
						"ie_key": ϒie_key,
					})
				})
			SkyBaseIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒinfo     λ.Object
						ϒself     = λargs[0]
						ϒurl      = λargs[1]
						ϒvideo_id λ.Object
						ϒwebpage  λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒvideo_id)
					ϒinfo = λ.Calm(ϒself, "_process_ooyala_element", ϒwebpage, λ.Calm(ϒself, "_search_regex", λ.GetAttr(ϒself, "_SDC_EL_REGEX", nil), ϒwebpage, λ.StrLiteral("sdc element")), ϒurl)
					λ.Calm(ϒinfo, "update", λ.DictLiteral(map[string]λ.Object{
						"title":       λ.Calm(ϒself, "_og_search_title", ϒwebpage),
						"description": λ.Cal(ϒstrip_or_none, λ.Calm(ϒself, "_og_search_description", ϒwebpage)),
					}))
					return ϒinfo
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"BRIGHTCOVE_URL_TEMPLATE": SkyBaseIE_BRIGHTCOVE_URL_TEMPLATE,
				"_SDC_EL_REGEX":           SkyBaseIE__SDC_EL_REGEX,
				"_process_ooyala_element": SkyBaseIE__process_ooyala_element,
				"_real_extract":           SkyBaseIE__real_extract,
			})
		}())
		SkySportsIE = λ.Cal(λ.TypeType, λ.StrLiteral("SkySportsIE"), λ.NewTuple(SkyBaseIE), func() λ.Dict {
			var (
				SkySportsIE__VALID_URL λ.Object
			)
			SkySportsIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?skysports\\.com/watch/video/([^/]+/)*(?P<id>[0-9]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": SkySportsIE__VALID_URL,
			})
		}())
		SkyNewsIE = λ.Cal(λ.TypeType, λ.StrLiteral("SkyNewsIE"), λ.NewTuple(SkyBaseIE), func() λ.Dict {
			var (
				SkyNewsIE_IE_NAME    λ.Object
				SkyNewsIE__VALID_URL λ.Object
			)
			SkyNewsIE_IE_NAME = λ.StrLiteral("sky:news")
			SkyNewsIE__VALID_URL = λ.StrLiteral("https?://news\\.sky\\.com/video/[0-9a-z-]+-(?P<id>[0-9]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":    SkyNewsIE_IE_NAME,
				"_VALID_URL": SkyNewsIE__VALID_URL,
			})
		}())
		SkySportsNewsIE = λ.Cal(λ.TypeType, λ.StrLiteral("SkySportsNewsIE"), λ.NewTuple(SkyBaseIE), func() λ.Dict {
			var (
				SkySportsNewsIE__VALID_URL λ.Object
			)
			SkySportsNewsIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?skysports\\.com/([^/]+/)*news/\\d+/(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": SkySportsNewsIE__VALID_URL,
			})
		}())
	})
}
