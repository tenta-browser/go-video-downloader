// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * parliamentliveuk/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/parliamentliveuk.py
 */

package parliamentliveuk

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor      λ.Object
	ParliamentLiveUKIE λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ParliamentLiveUKIE = λ.Cal(λ.TypeType, λ.StrLiteral("ParliamentLiveUKIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ParliamentLiveUKIE_IE_NAME       λ.Object
				ParliamentLiveUKIE__VALID_URL    λ.Object
				ParliamentLiveUKIE__real_extract λ.Object
			)
			ParliamentLiveUKIE_IE_NAME = λ.StrLiteral("parliamentlive.tv")
			ParliamentLiveUKIE__VALID_URL = λ.StrLiteral("(?i)https?://(?:www\\.)?parliamentlive\\.tv/Event/Index/(?P<id>[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12})")
			ParliamentLiveUKIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒevent_title   λ.Object
						ϒkaltura_url   λ.Object
						ϒself          = λargs[0]
						ϒurl           = λargs[1]
						ϒvideo_id      λ.Object
						ϒwebpage       λ.Object
						ϒwidget_config λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", λ.Add(λ.StrLiteral("http://vodplayer.parliamentlive.tv/?mid="), ϒvideo_id), ϒvideo_id)
					ϒwidget_config = λ.Calm(ϒself, "_parse_json", λ.Calm(ϒself, "_search_regex", λ.StrLiteral("(?s)kWidgetConfig\\s*=\\s*({.+});"), ϒwebpage, λ.StrLiteral("kaltura widget config")), ϒvideo_id)
					ϒkaltura_url = λ.Mod(λ.StrLiteral("kaltura:%s:%s"), λ.NewTuple(
						λ.GetItem(λ.GetItem(ϒwidget_config, λ.StrLiteral("wid")), λ.NewSlice(λ.IntLiteral(1), λ.None, λ.None)),
						λ.GetItem(ϒwidget_config, λ.StrLiteral("entry_id")),
					))
					ϒevent_title = λ.GetItem(λ.GetItem(λ.Calm(ϒself, "_download_json", λ.Add(λ.StrLiteral("http://parliamentlive.tv/Event/GetShareVideo/"), ϒvideo_id), ϒvideo_id), λ.StrLiteral("event")), λ.StrLiteral("title"))
					return λ.DictLiteral(map[string]λ.Object{
						"_type":       λ.StrLiteral("url_transparent"),
						"title":       ϒevent_title,
						"description": λ.StrLiteral(""),
						"url":         ϒkaltura_url,
						"ie_key":      λ.StrLiteral("Kaltura"),
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":       ParliamentLiveUKIE_IE_NAME,
				"_VALID_URL":    ParliamentLiveUKIE__VALID_URL,
				"_real_extract": ParliamentLiveUKIE__real_extract,
			})
		}())
	})
}
