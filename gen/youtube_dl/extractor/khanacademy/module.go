// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * khanacademy/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/khanacademy.py
 */

package khanacademy

import (
	Ωjson "github.com/tenta-browser/go-video-downloader/gen/json"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor     λ.Object
	KhanAcademyBaseIE λ.Object
	KhanAcademyIE     λ.Object
	KhanAcademyUnitIE λ.Object
	ϒint_or_none      λ.Object
	ϒparse_iso8601    λ.Object
	ϒtry_get          λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ϒtry_get = Ωutils.ϒtry_get
		KhanAcademyBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("KhanAcademyBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				KhanAcademyBaseIE__VALID_URL_TEMPL λ.Object
				KhanAcademyBaseIE__parse_video     λ.Object
				KhanAcademyBaseIE__real_extract    λ.Object
			)
			KhanAcademyBaseIE__VALID_URL_TEMPL = λ.StrLiteral("https?://(?:www\\.)?khanacademy\\.org/(?P<id>(?:[^/]+/){%s}%s[^?#/&]+)")
			KhanAcademyBaseIE__parse_video = λ.NewFunction("_parse_video",
				[]λ.Param{
					{Name: "self"},
					{Name: "video"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself  = λargs[0]
						ϒvideo = λargs[1]
					)
					_ = ϒself
					return λ.DictLiteral(map[string]λ.Object{
						"_type": λ.StrLiteral("url_transparent"),
						"url":   λ.GetItem(ϒvideo, λ.StrLiteral("youtubeId")),
						"id":    λ.Calm(ϒvideo, "get", λ.StrLiteral("slug")),
						"title": λ.Calm(ϒvideo, "get", λ.StrLiteral("title")),
						"thumbnail": func() λ.Object {
							if λv := λ.Calm(ϒvideo, "get", λ.StrLiteral("imageUrl")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Calm(ϒvideo, "get", λ.StrLiteral("thumbnailUrl"))
							}
						}(),
						"duration":    λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("duration"))),
						"description": λ.Calm(ϒvideo, "get", λ.StrLiteral("description")),
						"ie_key":      λ.StrLiteral("Youtube"),
					})
				})
			KhanAcademyBaseIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcomponent_props λ.Object
						ϒdisplay_id      λ.Object
						ϒself            = λargs[0]
						ϒurl             = λargs[1]
					)
					ϒdisplay_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒcomponent_props = λ.GetItem(λ.Calm(ϒself, "_parse_json", λ.GetItem(λ.GetItem(λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
						λ.StrLiteral("https://www.khanacademy.org/api/internal/graphql"),
						ϒdisplay_id,
					), λ.KWArgs{
						{Name: "query", Value: λ.DictLiteral(map[string]λ.Object{
							"hash": λ.IntLiteral(1604303425),
							"variables": λ.Cal(Ωjson.ϒdumps, λ.DictLiteral(map[string]λ.Object{
								"path":        ϒdisplay_id,
								"queryParams": λ.StrLiteral(""),
							})),
						})},
					}), λ.StrLiteral("data")), λ.StrLiteral("contentJson")), ϒdisplay_id), λ.StrLiteral("componentProps"))
					return λ.Calm(ϒself, "_parse_component_props", ϒcomponent_props)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL_TEMPL": KhanAcademyBaseIE__VALID_URL_TEMPL,
				"_parse_video":     KhanAcademyBaseIE__parse_video,
				"_real_extract":    KhanAcademyBaseIE__real_extract,
			})
		}())
		KhanAcademyIE = λ.Cal(λ.TypeType, λ.StrLiteral("KhanAcademyIE"), λ.NewTuple(KhanAcademyBaseIE), func() λ.Dict {
			var (
				KhanAcademyIE_IE_NAME                λ.Object
				KhanAcademyIE__VALID_URL             λ.Object
				KhanAcademyIE__parse_component_props λ.Object
			)
			KhanAcademyIE_IE_NAME = λ.StrLiteral("khanacademy")
			KhanAcademyIE__VALID_URL = λ.Mod(λ.GetAttr(KhanAcademyBaseIE, "_VALID_URL_TEMPL", nil), λ.NewTuple(
				λ.StrLiteral("4"),
				λ.StrLiteral("v/"),
			))
			KhanAcademyIE__parse_component_props = λ.NewFunction("_parse_component_props",
				[]λ.Param{
					{Name: "self"},
					{Name: "component_props"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒauthor_names    λ.Object
						ϒcomponent_props = λargs[1]
						ϒinfo            λ.Object
						ϒself            = λargs[0]
						ϒvideo           λ.Object
					)
					ϒvideo = λ.GetItem(λ.GetItem(ϒcomponent_props, λ.StrLiteral("tutorialPageData")), λ.StrLiteral("contentModel"))
					ϒinfo = λ.Calm(ϒself, "_parse_video", ϒvideo)
					ϒauthor_names = λ.Calm(ϒvideo, "get", λ.StrLiteral("authorNames"))
					λ.Calm(ϒinfo, "update", λ.DictLiteral(map[string]λ.Object{
						"uploader": func() λ.Object {
							if λ.IsTrue(ϒauthor_names) {
								return λ.Calm(λ.StrLiteral(", "), "join", ϒauthor_names)
							} else {
								return λ.None
							}
						}(),
						"timestamp": λ.Cal(ϒparse_iso8601, λ.Calm(ϒvideo, "get", λ.StrLiteral("dateAdded"))),
						"license":   λ.Calm(ϒvideo, "get", λ.StrLiteral("kaUserLicense")),
					}))
					return ϒinfo
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":                KhanAcademyIE_IE_NAME,
				"_VALID_URL":             KhanAcademyIE__VALID_URL,
				"_parse_component_props": KhanAcademyIE__parse_component_props,
			})
		}())
		KhanAcademyUnitIE = λ.Cal(λ.TypeType, λ.StrLiteral("KhanAcademyUnitIE"), λ.NewTuple(KhanAcademyBaseIE), func() λ.Dict {
			var (
				KhanAcademyUnitIE__VALID_URL λ.Object
			)
			KhanAcademyUnitIE__VALID_URL = λ.Add(λ.Mod(λ.GetAttr(KhanAcademyBaseIE, "_VALID_URL_TEMPL", nil), λ.NewTuple(
				λ.StrLiteral("2"),
				λ.StrLiteral(""),
			)), λ.StrLiteral("/?(?:[?#&]|$)"))
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": KhanAcademyUnitIE__VALID_URL,
			})
		}())
	})
}
