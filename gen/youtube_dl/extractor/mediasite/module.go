// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * mediasite/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/mediasite.py
 */

package mediasite

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError          λ.Object
	InfoExtractor           λ.Object
	MediasiteNamedCatalogIE λ.Object
	ϒ_ID_RE                 λ.Object
	ϒcompat_str             λ.Object
	ϒfloat_or_none          λ.Object
	ϒmimetype2ext           λ.Object
	ϒstr_or_none            λ.Object
	ϒtry_get                λ.Object
	ϒunescapeHTML           λ.Object
	ϒunsmuggle_url          λ.Object
	ϒurl_or_none            λ.Object
	ϒurljoin                λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ExtractorError = Ωutils.ExtractorError
		ϒfloat_or_none = Ωutils.ϒfloat_or_none
		ϒmimetype2ext = Ωutils.ϒmimetype2ext
		ϒstr_or_none = Ωutils.ϒstr_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ϒunescapeHTML = Ωutils.ϒunescapeHTML
		ϒunsmuggle_url = Ωutils.ϒunsmuggle_url
		ϒurl_or_none = Ωutils.ϒurl_or_none
		ϒurljoin = Ωutils.ϒurljoin
		ϒ_ID_RE = λ.StrLiteral("(?:[0-9a-f]{32,34}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12,14})")
		MediasiteNamedCatalogIE = λ.Cal(λ.TypeType, λ.StrLiteral("MediasiteNamedCatalogIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				MediasiteNamedCatalogIE__VALID_URL λ.Object
			)
			MediasiteNamedCatalogIE__VALID_URL = λ.StrLiteral("(?xi)(?P<url>https?://[^/]+/Mediasite)/Catalog/catalogs/(?P<catalog_name>[^/?#&]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": MediasiteNamedCatalogIE__VALID_URL,
			})
		}())
	})
}
