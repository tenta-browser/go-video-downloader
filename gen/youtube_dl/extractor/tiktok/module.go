// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * tiktok/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/tiktok.py
 */

package tiktok

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError λ.Object
	InfoExtractor  λ.Object
	TikTokBaseIE   λ.Object
	TikTokIE       λ.Object
	TikTokUserIE   λ.Object
	ϒcompat_str    λ.Object
	ϒfloat_or_none λ.Object
	ϒint_or_none   λ.Object
	ϒstr_or_none   λ.Object
	ϒtry_get       λ.Object
	ϒurl_or_none   λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωutils.ϒcompat_str
		ExtractorError = Ωutils.ExtractorError
		ϒfloat_or_none = Ωutils.ϒfloat_or_none
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒstr_or_none = Ωutils.ϒstr_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ϒurl_or_none = Ωutils.ϒurl_or_none
		TikTokBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("TikTokBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				TikTokBaseIE__extract_video λ.Object
			)
			TikTokBaseIE__extract_video = λ.NewFunction("_extract_video",
				[]λ.Param{
					{Name: "self"},
					{Name: "data"},
					{Name: "video_id", Def: λ.None},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒaweme_id      λ.Object
						ϒcomment_count λ.Object
						ϒdata          = λargs[1]
						ϒdescription   λ.Object
						ϒduration      λ.Object
						ϒformat_id     λ.Object
						ϒformat_url    λ.Object
						ϒformat_urls   λ.Object
						ϒformats       λ.Object
						ϒheight        λ.Object
						ϒlike_count    λ.Object
						ϒrepost_count  λ.Object
						ϒself          = λargs[0]
						ϒstats         λ.Object
						ϒthumbnail     λ.Object
						ϒtimestamp     λ.Object
						ϒuploader      λ.Object
						ϒuploader_id   λ.Object
						ϒvideo         λ.Object
						ϒvideo_id      = λargs[2]
						ϒview_count    λ.Object
						ϒwidth         λ.Object
						τmp0           λ.Object
						τmp1           λ.Object
					)
					ϒvideo = λ.GetItem(ϒdata, λ.StrLiteral("video"))
					ϒdescription = λ.Cal(ϒstr_or_none, λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							return λ.GetItem(ϒx, λ.StrLiteral("desc"))
						})))
					ϒwidth = λ.Cal(ϒint_or_none, λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							_ = ϒx
							return λ.GetItem(ϒvideo, λ.StrLiteral("width"))
						})))
					ϒheight = λ.Cal(ϒint_or_none, λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							_ = ϒx
							return λ.GetItem(ϒvideo, λ.StrLiteral("height"))
						})))
					ϒformat_urls = λ.Cal(λ.SetType)
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.NewTuple(
						λ.StrLiteral("download"),
						λ.StrLiteral("play"),
					))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒformat_id = τmp1
						ϒformat_url = λ.Cal(ϒurl_or_none, λ.Calm(ϒvideo, "get", λ.Mod(λ.StrLiteral("%sAddr"), ϒformat_id)))
						if !λ.IsTrue(ϒformat_url) {
							continue
						}
						if λ.Contains(ϒformat_urls, ϒformat_url) {
							continue
						}
						λ.Calm(ϒformat_urls, "add", ϒformat_url)
						λ.Calm(ϒformats, "append", λ.DictLiteral(map[string]λ.Object{
							"url":    ϒformat_url,
							"ext":    λ.StrLiteral("mp4"),
							"height": ϒheight,
							"width":  ϒwidth,
							"http_headers": λ.DictLiteral(map[string]string{
								"Referer": "https://www.tiktok.com/",
							}),
						}))
					}
					λ.Calm(ϒself, "_sort_formats", ϒformats)
					ϒthumbnail = λ.Cal(ϒurl_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("cover")))
					ϒduration = λ.Cal(ϒfloat_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("duration")))
					ϒuploader = λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("author")), λ.StrLiteral("nickname"))
						}), ϒcompat_str)
					ϒuploader_id = λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("author")), λ.StrLiteral("id"))
						}), ϒcompat_str)
					ϒtimestamp = λ.Cal(ϒint_or_none, λ.Calm(ϒdata, "get", λ.StrLiteral("createTime")))
					ϒstats = λ.NewFunction("stats",
						[]λ.Param{
							{Name: "key"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒkey = λargs[0]
							)
							return λ.Cal(ϒint_or_none, λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
								[]λ.Param{
									{Name: "x"},
								},
								0, false, false,
								func(λargs []λ.Object) λ.Object {
									var (
										ϒx = λargs[0]
									)
									return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("stats")), λ.Mod(λ.StrLiteral("%sCount"), ϒkey))
								})))
						})
					ϒview_count = λ.Cal(ϒstats, λ.StrLiteral("play"))
					ϒlike_count = λ.Cal(ϒstats, λ.StrLiteral("digg"))
					ϒcomment_count = λ.Cal(ϒstats, λ.StrLiteral("comment"))
					ϒrepost_count = λ.Cal(ϒstats, λ.StrLiteral("share"))
					ϒaweme_id = func() λ.Object {
						if λv := λ.Calm(ϒdata, "get", λ.StrLiteral("id")); λ.IsTrue(λv) {
							return λv
						} else {
							return ϒvideo_id
						}
					}()
					return λ.DictLiteral(map[string]λ.Object{
						"id": ϒaweme_id,
						"title": func() λ.Object {
							if λv := ϒuploader; λ.IsTrue(λv) {
								return λv
							} else {
								return ϒaweme_id
							}
						}(),
						"description":   ϒdescription,
						"thumbnail":     ϒthumbnail,
						"duration":      ϒduration,
						"uploader":      ϒuploader,
						"uploader_id":   ϒuploader_id,
						"timestamp":     ϒtimestamp,
						"view_count":    ϒview_count,
						"like_count":    ϒlike_count,
						"comment_count": ϒcomment_count,
						"repost_count":  ϒrepost_count,
						"formats":       ϒformats,
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_extract_video": TikTokBaseIE__extract_video,
			})
		}())
		TikTokIE = λ.Cal(λ.TypeType, λ.StrLiteral("TikTokIE"), λ.NewTuple(TikTokBaseIE), func() λ.Dict {
			var (
				TikTokIE__VALID_URL       λ.Object
				TikTokIE__real_extract    λ.Object
				TikTokIE__real_initialize λ.Object
			)
			TikTokIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?tiktok\\.com/@[^/]+/video/(?P<id>\\d+)")
			TikTokIE__real_initialize = λ.NewFunction("_real_initialize",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					λ.Call(λ.GetAttr(ϒself, "_request_webpage", nil), λ.NewArgs(
						λ.StrLiteral("https://www.tiktok.com/"),
						λ.None,
					), λ.KWArgs{
						{Name: "note", Value: λ.StrLiteral("Setting up session")},
					})
					return λ.None
				})
			TikTokIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdata       λ.Object
						ϒpage_props λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒvideo_id   λ.Object
						ϒwebpage    λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒvideo_id)
					ϒpage_props = λ.GetItem(λ.GetItem(λ.Calm(ϒself, "_parse_json", λ.Calm(ϒself, "_search_regex", λ.StrLiteral("<script[^>]+\\bid=[\"\\']__NEXT_DATA__[^>]+>\\s*({.+?})\\s*</script"), ϒwebpage, λ.StrLiteral("data")), ϒvideo_id), λ.StrLiteral("props")), λ.StrLiteral("pageProps"))
					ϒdata = λ.Cal(ϒtry_get, ϒpage_props, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("itemInfo")), λ.StrLiteral("itemStruct"))
						}), λ.DictType)
					if λ.IsTrue(func() λ.Object {
						if λv := λ.NewBool(!λ.IsTrue(ϒdata)); !λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Eq(λ.Calm(ϒpage_props, "get", λ.StrLiteral("statusCode")), λ.IntLiteral(10216))
						}
					}()) {
						panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.StrLiteral("This video is private")), λ.KWArgs{
							{Name: "expected", Value: λ.True},
						})))
					}
					return λ.Calm(ϒself, "_extract_video", ϒdata, ϒvideo_id)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":       TikTokIE__VALID_URL,
				"_real_extract":    TikTokIE__real_extract,
				"_real_initialize": TikTokIE__real_initialize,
			})
		}())
		TikTokUserIE = λ.Cal(λ.TypeType, λ.StrLiteral("TikTokUserIE"), λ.NewTuple(TikTokBaseIE), func() λ.Dict {
			var (
				TikTokUserIE__VALID_URL λ.Object
				TikTokUserIE_suitable   λ.Object
			)
			TikTokUserIE__VALID_URL = λ.StrLiteral("https://(?:www\\.)?tiktok\\.com/@(?P<id>[^/?#&]+)")
			TikTokUserIE_suitable = λ.NewFunction("suitable",
				[]λ.Param{
					{Name: "cls"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcls = λargs[0]
						ϒurl = λargs[1]
					)
					return func() λ.Object {
						if λ.IsTrue(λ.Calm(TikTokIE, "suitable", ϒurl)) {
							return λ.False
						} else {
							return λ.Calm(λ.Cal(λ.SuperType, TikTokUserIE, ϒcls), "suitable", ϒurl)
						}
					}()
				})
			TikTokUserIE_suitable = λ.Cal(λ.ClassMethodType, TikTokUserIE_suitable)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TikTokUserIE__VALID_URL,
				"suitable":   TikTokUserIE_suitable,
			})
		}())
	})
}
