// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * abcnews/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/abcnews.py
 */

package abcnews

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωamp "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/amp"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	AMPIE           λ.Object
	AbcNewsIE       λ.Object
	AbcNewsVideoIE  λ.Object
	InfoExtractor   λ.Object
	ϒparse_duration λ.Object
	ϒparse_iso8601  λ.Object
	ϒtry_get        λ.Object
)

func init() {
	λ.InitModule(func() {
		AMPIE = Ωamp.AMPIE
		InfoExtractor = Ωcommon.InfoExtractor
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ϒtry_get = Ωutils.ϒtry_get
		AbcNewsVideoIE = λ.Cal(λ.TypeType, λ.StrLiteral("AbcNewsVideoIE"), λ.NewTuple(AMPIE), func() λ.Dict {
			var (
				AbcNewsVideoIE_IE_NAME       λ.Object
				AbcNewsVideoIE__VALID_URL    λ.Object
				AbcNewsVideoIE__real_extract λ.Object
			)
			AbcNewsVideoIE_IE_NAME = λ.StrLiteral("abcnews:video")
			AbcNewsVideoIE__VALID_URL = λ.StrLiteral("(?x)\n                    https?://\n                        (?:\n                            abcnews\\.go\\.com/\n                            (?:\n                                (?:[^/]+/)*video/(?P<display_id>[0-9a-z-]+)-|\n                                video/(?:embed|itemfeed)\\?.*?\\bid=\n                            )|\n                            fivethirtyeight\\.abcnews\\.go\\.com/video/embed/\\d+/\n                        )\n                        (?P<id>\\d+)\n                    ")
			AbcNewsVideoIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id λ.Object
						ϒinfo_dict  λ.Object
						ϒmobj       λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒvideo_id   λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒdisplay_id = λ.Calm(ϒmobj, "group", λ.StrLiteral("display_id"))
					ϒvideo_id = λ.Calm(ϒmobj, "group", λ.StrLiteral("id"))
					ϒinfo_dict = λ.Calm(ϒself, "_extract_feed_info", λ.Mod(λ.StrLiteral("http://abcnews.go.com/video/itemfeed?id=%s"), ϒvideo_id))
					λ.Calm(ϒinfo_dict, "update", λ.DictLiteral(map[string]λ.Object{
						"id":         ϒvideo_id,
						"display_id": ϒdisplay_id,
					}))
					return ϒinfo_dict
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":       AbcNewsVideoIE_IE_NAME,
				"_VALID_URL":    AbcNewsVideoIE__VALID_URL,
				"_real_extract": AbcNewsVideoIE__real_extract,
			})
		}())
		AbcNewsIE = λ.Cal(λ.TypeType, λ.StrLiteral("AbcNewsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				AbcNewsIE__VALID_URL λ.Object
			)
			AbcNewsIE__VALID_URL = λ.StrLiteral("https?://abcnews\\.go\\.com/(?:[^/]+/)+(?P<display_id>[0-9a-z-]+)/story\\?id=(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": AbcNewsIE__VALID_URL,
			})
		}())
	})
}
