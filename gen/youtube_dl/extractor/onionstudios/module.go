// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * onionstudios/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/onionstudios.py
 */

package onionstudios

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor  λ.Object
	OnionStudiosIE λ.Object
	ϒcompat_str    λ.Object
	ϒjs_to_json    λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒjs_to_json = Ωutils.ϒjs_to_json
		OnionStudiosIE = λ.Cal(λ.TypeType, λ.StrLiteral("OnionStudiosIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				OnionStudiosIE__VALID_URL    λ.Object
				OnionStudiosIE__real_extract λ.Object
			)
			OnionStudiosIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?onionstudios\\.com/(?:video(?:s/[^/]+-|/)|embed\\?.*\\bid=)(?P<id>\\d+)(?!-)")
			OnionStudiosIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒmcp_id   λ.Object
						ϒself     = λargs[0]
						ϒurl      = λargs[1]
						ϒvideo_id λ.Object
						ϒwebpage  λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", λ.StrLiteral("http://onionstudios.com/embed/dc94dc2899fe644c0e7241fa04c1b732.js"), ϒvideo_id)
					ϒmcp_id = λ.Cal(ϒcompat_str, λ.GetItem(λ.GetItem(λ.Calm(ϒself, "_parse_json", λ.Calm(ϒself, "_search_regex", λ.StrLiteral("window\\.mcpMapping\\s*=\\s*({.+?});"), ϒwebpage, λ.StrLiteral("MCP Mapping")), ϒvideo_id, ϒjs_to_json), ϒvideo_id), λ.StrLiteral("mcp_id")))
					return λ.Calm(ϒself, "url_result", λ.Add(λ.StrLiteral("http://kinja.com/ajax/inset/iframe?id=mcp-"), ϒmcp_id), λ.StrLiteral("KinjaEmbed"), ϒmcp_id)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    OnionStudiosIE__VALID_URL,
				"_real_extract": OnionStudiosIE__real_extract,
			})
		}())
	})
}
