// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * safari/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/safari.py
 */

package safari

import (
	Ωjson "github.com/tenta-browser/go-video-downloader/gen/json"
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωparse "github.com/tenta-browser/go-video-downloader/gen/urllib/parse"
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError    λ.Object
	InfoExtractor     λ.Object
	SafariApiIE       λ.Object
	SafariBaseIE      λ.Object
	SafariCourseIE    λ.Object
	SafariIE          λ.Object
	ϒcompat_parse_qs  λ.Object
	ϒupdate_url_query λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_parse_qs = Ωcompat.ϒcompat_parse_qs
		ExtractorError = Ωutils.ExtractorError
		ϒupdate_url_query = Ωutils.ϒupdate_url_query
		SafariBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("SafariBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				SafariBaseIE_LOGGED_IN        λ.Object
				SafariBaseIE__NETRC_MACHINE   λ.Object
				SafariBaseIE__login           λ.Object
				SafariBaseIE__real_initialize λ.Object
			)
			SafariBaseIE__NETRC_MACHINE = λ.StrLiteral("safari")
			SafariBaseIE_LOGGED_IN = λ.False
			SafariBaseIE__real_initialize = λ.NewFunction("_real_initialize",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					λ.Calm(ϒself, "_login")
					return λ.None
				})
			SafariBaseIE__login = λ.NewFunction("_login",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒauth         λ.Object
						ϒcookie       λ.Object
						ϒcredentials  λ.Object
						ϒis_logged    λ.Object
						ϒnext_uri     λ.Object
						ϒparsed_url   λ.Object
						ϒpassword     λ.Object
						ϒqs           λ.Object
						ϒredirect_url λ.Object
						ϒself         = λargs[0]
						ϒurlh         λ.Object
						ϒusername     λ.Object
						τmp0          λ.Object
						τmp1          λ.Object
					)
					τmp0 = λ.UnpackIterable(λ.Calm(ϒself, "_get_login_info"), 2)
					ϒusername = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒpassword = λ.GetItem(τmp0, λ.IntLiteral(1))
					if ϒusername == λ.None {
						return λ.None
					}
					τmp0 = λ.UnpackIterable(λ.Calm(ϒself, "_download_webpage_handle", λ.StrLiteral("https://learning.oreilly.com/accounts/login-check/"), λ.None, λ.StrLiteral("Downloading login page")), 2)
					_ = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒurlh = λ.GetItem(τmp0, λ.IntLiteral(1))
					ϒis_logged = λ.NewFunction("is_logged",
						[]λ.Param{
							{Name: "urlh"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒurlh = λargs[0]
							)
							return λ.NewBool(λ.Contains(λ.Calm(ϒurlh, "geturl"), λ.StrLiteral("learning.oreilly.com/home/")))
						})
					if λ.IsTrue(λ.Cal(ϒis_logged, ϒurlh)) {
						λ.SetAttr(ϒself, "LOGGED_IN", λ.True)
						return λ.None
					}
					ϒredirect_url = λ.Calm(ϒurlh, "geturl")
					ϒparsed_url = λ.Cal(Ωparse.ϒurlparse, ϒredirect_url)
					ϒqs = λ.Cal(ϒcompat_parse_qs, λ.GetAttr(ϒparsed_url, "query", nil))
					ϒnext_uri = λ.Cal(Ωparse.ϒurljoin, λ.StrLiteral("https://api.oreilly.com"), λ.GetItem(λ.GetItem(ϒqs, λ.StrLiteral("next")), λ.IntLiteral(0)))
					τmp0 = λ.UnpackIterable(λ.Call(λ.GetAttr(ϒself, "_download_json_handle", nil), λ.NewArgs(
						λ.StrLiteral("https://www.oreilly.com/member/auth/login/"),
						λ.None,
						λ.StrLiteral("Logging in"),
					), λ.KWArgs{
						{Name: "data", Value: λ.Calm(λ.Cal(Ωjson.ϒdumps, λ.DictLiteral(map[string]λ.Object{
							"email":        ϒusername,
							"password":     ϒpassword,
							"redirect_uri": ϒnext_uri,
						})), "encode")},
						{Name: "headers", Value: λ.DictLiteral(map[string]λ.Object{
							"Content-Type": λ.StrLiteral("application/json"),
							"Referer":      ϒredirect_url,
						})},
						{Name: "expected_status", Value: λ.IntLiteral(400)},
					}), 2)
					ϒauth = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒurlh = λ.GetItem(τmp0, λ.IntLiteral(1))
					ϒcredentials = λ.Calm(ϒauth, "get", λ.StrLiteral("credentials"))
					if λ.IsTrue(func() λ.Object {
						if λv := λ.NewBool(!λ.IsTrue(λ.Calm(ϒauth, "get", λ.StrLiteral("logged_in")))); !λ.IsTrue(λv) {
							return λv
						} else if λv := λ.NewBool(!λ.IsTrue(λ.Calm(ϒauth, "get", λ.StrLiteral("redirect_uri")))); !λ.IsTrue(λv) {
							return λv
						} else {
							return ϒcredentials
						}
					}()) {
						panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.Mod(λ.StrLiteral("Unable to login: %s"), ϒcredentials)), λ.KWArgs{
							{Name: "expected", Value: λ.True},
						})))
					}
					τmp0 = λ.Cal(λ.BuiltinIter, λ.NewTuple(
						λ.StrLiteral("groot_sessionid"),
						λ.StrLiteral("orm-jwt"),
						λ.StrLiteral("orm-rt"),
					))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒcookie = τmp1
						λ.Calm(ϒself, "_apply_first_set_cookie_header", ϒurlh, ϒcookie)
					}
					τmp0 = λ.UnpackIterable(λ.Calm(ϒself, "_download_webpage_handle", func() λ.Object {
						if λv := λ.Calm(ϒauth, "get", λ.StrLiteral("redirect_uri")); λ.IsTrue(λv) {
							return λv
						} else {
							return ϒnext_uri
						}
					}(), λ.None, λ.StrLiteral("Completing login")), 2)
					_ = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒurlh = λ.GetItem(τmp0, λ.IntLiteral(1))
					if λ.IsTrue(λ.Cal(ϒis_logged, ϒurlh)) {
						λ.SetAttr(ϒself, "LOGGED_IN", λ.True)
						return λ.None
					}
					panic(λ.Raise(λ.Cal(ExtractorError, λ.StrLiteral("Unable to log in"))))
					return λ.None
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"LOGGED_IN":        SafariBaseIE_LOGGED_IN,
				"_NETRC_MACHINE":   SafariBaseIE__NETRC_MACHINE,
				"_login":           SafariBaseIE__login,
				"_real_initialize": SafariBaseIE__real_initialize,
			})
		}())
		SafariIE = λ.Cal(λ.TypeType, λ.StrLiteral("SafariIE"), λ.NewTuple(SafariBaseIE), func() λ.Dict {
			var (
				SafariIE_IE_NAME       λ.Object
				SafariIE__PARTNER_ID   λ.Object
				SafariIE__UICONF_ID    λ.Object
				SafariIE__VALID_URL    λ.Object
				SafariIE__real_extract λ.Object
			)
			SafariIE_IE_NAME = λ.StrLiteral("safari")
			SafariIE__VALID_URL = λ.StrLiteral("(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    ")
			SafariIE__PARTNER_ID = λ.StrLiteral("1926081")
			SafariIE__UICONF_ID = λ.StrLiteral("29375172")
			SafariIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒkaltura_session λ.Object
						ϒmobj            λ.Object
						ϒpartner_id      λ.Object
						ϒquery           λ.Object
						ϒreference_id    λ.Object
						ϒself            = λargs[0]
						ϒsession         λ.Object
						ϒui_id           λ.Object
						ϒurl             = λargs[1]
						ϒurlh            λ.Object
						ϒvideo_id        λ.Object
						ϒwebpage         λ.Object
						τmp0             λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒreference_id = λ.Calm(ϒmobj, "group", λ.StrLiteral("reference_id"))
					if λ.IsTrue(ϒreference_id) {
						ϒvideo_id = ϒreference_id
						ϒpartner_id = λ.GetAttr(ϒself, "_PARTNER_ID", nil)
						ϒui_id = λ.GetAttr(ϒself, "_UICONF_ID", nil)
					} else {
						ϒvideo_id = λ.Mod(λ.StrLiteral("%s-%s"), λ.NewTuple(
							λ.Calm(ϒmobj, "group", λ.StrLiteral("course_id")),
							λ.Calm(ϒmobj, "group", λ.StrLiteral("part")),
						))
						τmp0 = λ.UnpackIterable(λ.Calm(ϒself, "_download_webpage_handle", ϒurl, ϒvideo_id), 2)
						ϒwebpage = λ.GetItem(τmp0, λ.IntLiteral(0))
						ϒurlh = λ.GetItem(τmp0, λ.IntLiteral(1))
						ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), λ.Calm(ϒurlh, "geturl"))
						ϒreference_id = λ.Calm(ϒmobj, "group", λ.StrLiteral("reference_id"))
						if !λ.IsTrue(ϒreference_id) {
							ϒreference_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
								λ.StrLiteral("data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1"),
								ϒwebpage,
								λ.StrLiteral("kaltura reference id"),
							), λ.KWArgs{
								{Name: "group", Value: λ.StrLiteral("id")},
							})
						}
						ϒpartner_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.StrLiteral("data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1"),
							ϒwebpage,
							λ.StrLiteral("kaltura widget id"),
						), λ.KWArgs{
							{Name: "default", Value: λ.GetAttr(ϒself, "_PARTNER_ID", nil)},
							{Name: "group", Value: λ.StrLiteral("id")},
						})
						ϒui_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.StrLiteral("data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1"),
							ϒwebpage,
							λ.StrLiteral("kaltura uiconf id"),
						), λ.KWArgs{
							{Name: "default", Value: λ.GetAttr(ϒself, "_UICONF_ID", nil)},
							{Name: "group", Value: λ.StrLiteral("id")},
						})
					}
					ϒquery = λ.DictLiteral(map[string]λ.Object{
						"wid":                    λ.Mod(λ.StrLiteral("_%s"), ϒpartner_id),
						"uiconf_id":              ϒui_id,
						"flashvars[referenceId]": ϒreference_id,
					})
					if λ.IsTrue(λ.GetAttr(ϒself, "LOGGED_IN", nil)) {
						ϒkaltura_session = λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
							λ.Mod(λ.StrLiteral("%s/player/kaltura_session/?reference_id=%s"), λ.NewTuple(
								λ.GetAttr(ϒself, "_API_BASE", nil),
								ϒreference_id,
							)),
							ϒvideo_id,
							λ.StrLiteral("Downloading kaltura session JSON"),
							λ.StrLiteral("Unable to download kaltura session JSON"),
						), λ.KWArgs{
							{Name: "fatal", Value: λ.False},
							{Name: "headers", Value: λ.DictLiteral(map[string]string{
								"Accept": "application/json",
							})},
						})
						if λ.IsTrue(ϒkaltura_session) {
							ϒsession = λ.Calm(ϒkaltura_session, "get", λ.StrLiteral("session"))
							if λ.IsTrue(ϒsession) {
								λ.SetItem(ϒquery, λ.StrLiteral("flashvars[ks]"), ϒsession)
							}
						}
					}
					return λ.Calm(ϒself, "url_result", λ.Cal(ϒupdate_url_query, λ.StrLiteral("https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php"), ϒquery), λ.StrLiteral("Kaltura"))
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":       SafariIE_IE_NAME,
				"_PARTNER_ID":   SafariIE__PARTNER_ID,
				"_UICONF_ID":    SafariIE__UICONF_ID,
				"_VALID_URL":    SafariIE__VALID_URL,
				"_real_extract": SafariIE__real_extract,
			})
		}())
		SafariApiIE = λ.Cal(λ.TypeType, λ.StrLiteral("SafariApiIE"), λ.NewTuple(SafariBaseIE), func() λ.Dict {
			var (
				SafariApiIE__VALID_URL λ.Object
			)
			SafariApiIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": SafariApiIE__VALID_URL,
			})
		}())
		SafariCourseIE = λ.Cal(λ.TypeType, λ.StrLiteral("SafariCourseIE"), λ.NewTuple(SafariBaseIE), func() λ.Dict {
			var (
				SafariCourseIE__VALID_URL λ.Object
				SafariCourseIE_suitable   λ.Object
			)
			SafariCourseIE__VALID_URL = λ.StrLiteral("(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    ")
			SafariCourseIE_suitable = λ.NewFunction("suitable",
				[]λ.Param{
					{Name: "cls"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcls = λargs[0]
						ϒurl = λargs[1]
					)
					return func() λ.Object {
						if λ.IsTrue(func() λ.Object {
							if λv := λ.Calm(SafariIE, "suitable", ϒurl); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Calm(SafariApiIE, "suitable", ϒurl)
							}
						}()) {
							return λ.False
						} else {
							return λ.Calm(λ.Cal(λ.SuperType, SafariCourseIE, ϒcls), "suitable", ϒurl)
						}
					}()
				})
			SafariCourseIE_suitable = λ.Cal(λ.ClassMethodType, SafariCourseIE_suitable)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": SafariCourseIE__VALID_URL,
				"suitable":   SafariCourseIE_suitable,
			})
		}())
	})
}
