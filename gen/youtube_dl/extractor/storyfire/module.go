// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * storyfire/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/storyfire.py
 */

package storyfire

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor     λ.Object
	StoryFireBaseIE   λ.Object
	StoryFireIE       λ.Object
	StoryFireSeriesIE λ.Object
	StoryFireUserIE   λ.Object
	ϒint_or_none      λ.Object
	ϒsmuggle_url      λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		StoryFireBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("StoryFireBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				StoryFireBaseIE__VALID_URL_BASE λ.Object
				StoryFireBaseIE__call_api       λ.Object
				StoryFireBaseIE__parse_video    λ.Object
			)
			StoryFireBaseIE__VALID_URL_BASE = λ.StrLiteral("https?://(?:www\\.)?storyfire\\.com/")
			StoryFireBaseIE__call_api = λ.NewFunction("_call_api",
				[]λ.Param{
					{Name: "self"},
					{Name: "path"},
					{Name: "video_id"},
					{Name: "resource"},
					{Name: "query", Def: λ.None},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒpath     = λargs[1]
						ϒquery    = λargs[4]
						ϒresource = λargs[3]
						ϒself     = λargs[0]
						ϒvideo_id = λargs[2]
					)
					return λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
						λ.Mod(λ.StrLiteral("https://storyfire.com/app/%s/%s"), λ.NewTuple(
							ϒpath,
							ϒvideo_id,
						)),
						ϒvideo_id,
						λ.Mod(λ.StrLiteral("Downloading %s JSON metadata"), ϒresource),
					), λ.KWArgs{
						{Name: "query", Value: ϒquery},
					})
				})
			StoryFireBaseIE__parse_video = λ.NewFunction("_parse_video",
				[]λ.Param{
					{Name: "self"},
					{Name: "video"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself        = λargs[0]
						ϒtitle       λ.Object
						ϒuploader_id λ.Object
						ϒvideo       = λargs[1]
						ϒvimeo_id    λ.Object
					)
					ϒtitle = λ.GetItem(ϒvideo, λ.StrLiteral("title"))
					ϒvimeo_id = λ.Calm(ϒself, "_search_regex", λ.StrLiteral("https?://player\\.vimeo\\.com/external/(\\d+)"), λ.GetItem(ϒvideo, λ.StrLiteral("vimeoVideoURL")), λ.StrLiteral("vimeo id"))
					ϒuploader_id = λ.Calm(ϒvideo, "get", λ.StrLiteral("hostID"))
					return λ.DictLiteral(map[string]λ.Object{
						"_type":       λ.StrLiteral("url_transparent"),
						"id":          ϒvimeo_id,
						"title":       ϒtitle,
						"description": λ.Calm(ϒvideo, "get", λ.StrLiteral("description")),
						"url": λ.Cal(ϒsmuggle_url, λ.Add(λ.StrLiteral("https://player.vimeo.com/video/"), ϒvimeo_id), λ.DictLiteral(map[string]λ.Object{
							"http_headers": λ.DictLiteral(map[string]string{
								"Referer": "https://storyfire.com/",
							}),
						})),
						"thumbnail":     λ.Calm(ϒvideo, "get", λ.StrLiteral("storyImage")),
						"view_count":    λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("views"))),
						"like_count":    λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("likesCount"))),
						"comment_count": λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("commentsCount"))),
						"duration":      λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("videoDuration"))),
						"timestamp":     λ.Cal(ϒint_or_none, λ.Calm(ϒvideo, "get", λ.StrLiteral("publishDate"))),
						"uploader":      λ.Calm(ϒvideo, "get", λ.StrLiteral("username")),
						"uploader_id":   ϒuploader_id,
						"uploader_url": func() λ.Object {
							if λ.IsTrue(ϒuploader_id) {
								return λ.Mod(λ.StrLiteral("https://storyfire.com/user/%s/video"), ϒuploader_id)
							} else {
								return λ.None
							}
						}(),
						"episode_number": λ.Cal(ϒint_or_none, func() λ.Object {
							if λv := λ.Calm(ϒvideo, "get", λ.StrLiteral("episodeNumber")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Calm(ϒvideo, "get", λ.StrLiteral("episode_number"))
							}
						}()),
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL_BASE": StoryFireBaseIE__VALID_URL_BASE,
				"_call_api":       StoryFireBaseIE__call_api,
				"_parse_video":    StoryFireBaseIE__parse_video,
			})
		}())
		StoryFireIE = λ.Cal(λ.TypeType, λ.StrLiteral("StoryFireIE"), λ.NewTuple(StoryFireBaseIE), func() λ.Dict {
			var (
				StoryFireIE__VALID_URL    λ.Object
				StoryFireIE__real_extract λ.Object
			)
			StoryFireIE__VALID_URL = λ.Add(λ.GetAttr(StoryFireBaseIE, "_VALID_URL_BASE", nil), λ.StrLiteral("video-details/(?P<id>[0-9a-f]{24})"))
			StoryFireIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself     = λargs[0]
						ϒurl      = λargs[1]
						ϒvideo    λ.Object
						ϒvideo_id λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒvideo = λ.GetItem(λ.Calm(ϒself, "_call_api", λ.StrLiteral("generic/video-detail"), ϒvideo_id, λ.StrLiteral("video")), λ.StrLiteral("video"))
					return λ.Calm(ϒself, "_parse_video", ϒvideo)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    StoryFireIE__VALID_URL,
				"_real_extract": StoryFireIE__real_extract,
			})
		}())
		StoryFireUserIE = λ.Cal(λ.TypeType, λ.StrLiteral("StoryFireUserIE"), λ.NewTuple(StoryFireBaseIE), func() λ.Dict {
			var (
				StoryFireUserIE__VALID_URL λ.Object
			)
			StoryFireUserIE__VALID_URL = λ.Add(λ.GetAttr(StoryFireBaseIE, "_VALID_URL_BASE", nil), λ.StrLiteral("user/(?P<id>[^/]+)/video"))
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": StoryFireUserIE__VALID_URL,
			})
		}())
		StoryFireSeriesIE = λ.Cal(λ.TypeType, λ.StrLiteral("StoryFireSeriesIE"), λ.NewTuple(StoryFireBaseIE), func() λ.Dict {
			var (
				StoryFireSeriesIE__VALID_URL λ.Object
			)
			StoryFireSeriesIE__VALID_URL = λ.Add(λ.GetAttr(StoryFireBaseIE, "_VALID_URL_BASE", nil), λ.StrLiteral("write/series/stories/(?P<id>[^/?&#]+)"))
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": StoryFireSeriesIE__VALID_URL,
			})
		}())
	})
}
