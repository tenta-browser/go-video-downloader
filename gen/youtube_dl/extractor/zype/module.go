// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * zype/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/zype.py
 */

package zype

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError    λ.Object
	InfoExtractor     λ.Object
	ZypeIE            λ.Object
	ϒcompat_HTTPError λ.Object
	ϒdict_get         λ.Object
	ϒint_or_none      λ.Object
	ϒjs_to_json       λ.Object
	ϒparse_iso8601    λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_HTTPError = Ωcompat.ϒcompat_HTTPError
		ϒdict_get = Ωutils.ϒdict_get
		ExtractorError = Ωutils.ExtractorError
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒjs_to_json = Ωutils.ϒjs_to_json
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ZypeIE = λ.Cal(λ.TypeType, λ.StrLiteral("ZypeIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ZypeIE__COMMON_RE λ.Object
				ZypeIE__ID_RE     λ.Object
			)
			ZypeIE__ID_RE = λ.StrLiteral("[\\da-fA-F]+")
			ZypeIE__COMMON_RE = λ.StrLiteral("//player\\.zype\\.com/embed/%s\\.(?:js|json|html)\\?.*?(?:access_token|(?:ap[ip]|player)_key)=")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_COMMON_RE": ZypeIE__COMMON_RE,
				"_ID_RE":     ZypeIE__ID_RE,
			})
		}())
	})
}
