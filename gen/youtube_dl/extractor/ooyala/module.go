// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * ooyala/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/ooyala.py
 */

package ooyala

import (
	Ωbase64 "github.com/tenta-browser/go-video-downloader/gen/base64"
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError    λ.Object
	InfoExtractor     λ.Object
	OoyalaBaseIE      λ.Object
	OoyalaExternalIE  λ.Object
	OoyalaIE          λ.Object
	ϒcompat_b64decode λ.Object
	ϒcompat_str       λ.Object
	ϒdetermine_ext    λ.Object
	ϒfloat_or_none    λ.Object
	ϒint_or_none      λ.Object
	ϒtry_get          λ.Object
	ϒunsmuggle_url    λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_b64decode = Ωcompat.ϒcompat_b64decode
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒdetermine_ext = Ωutils.ϒdetermine_ext
		ExtractorError = Ωutils.ExtractorError
		ϒfloat_or_none = Ωutils.ϒfloat_or_none
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ϒunsmuggle_url = Ωutils.ϒunsmuggle_url
		OoyalaBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("OoyalaBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				OoyalaBaseIE__AUTHORIZATION_URL_TEMPLATE λ.Object
				OoyalaBaseIE__CONTENT_TREE_BASE          λ.Object
				OoyalaBaseIE__PLAYER_BASE                λ.Object
				OoyalaBaseIE__extract                    λ.Object
			)
			OoyalaBaseIE__PLAYER_BASE = λ.StrLiteral("http://player.ooyala.com/")
			OoyalaBaseIE__CONTENT_TREE_BASE = λ.Add(OoyalaBaseIE__PLAYER_BASE, λ.StrLiteral("player_api/v1/content_tree/"))
			OoyalaBaseIE__AUTHORIZATION_URL_TEMPLATE = λ.Add(OoyalaBaseIE__PLAYER_BASE, λ.StrLiteral("sas/player_api/v2/authorization/embed_code/%s/%s"))
			OoyalaBaseIE__extract = λ.NewFunction("_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "content_tree_url"},
					{Name: "video_id"},
					{Name: "domain", Def: λ.None},
					{Name: "supportedformats", Def: λ.None},
					{Name: "embed_token", Def: λ.None},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒauth_data        λ.Object
						ϒcontent_tree     λ.Object
						ϒcontent_tree_url = λargs[1]
						ϒdelivery_type    λ.Object
						ϒdomain           = λargs[3]
						ϒembed_code       λ.Object
						ϒembed_token      = λargs[5]
						ϒext              λ.Object
						ϒformats          λ.Object
						ϒlang             λ.Object
						ϒmetadata         λ.Object
						ϒpcode            λ.Object
						ϒs_url            λ.Object
						ϒself             = λargs[0]
						ϒstream           λ.Object
						ϒstreams          λ.Object
						ϒsub              λ.Object
						ϒsub_url          λ.Object
						ϒsubtitles        λ.Object
						ϒsupportedformats = λargs[4]
						ϒtitle            λ.Object
						ϒurl_data         λ.Object
						ϒurls             λ.Object
						ϒvideo_id         = λargs[2]
						τmp0              λ.Object
						τmp1              λ.Object
						τmp2              λ.Object
					)
					ϒcontent_tree = λ.GetItem(λ.Calm(ϒself, "_download_json", ϒcontent_tree_url, ϒvideo_id), λ.StrLiteral("content_tree"))
					ϒmetadata = λ.GetItem(ϒcontent_tree, λ.GetItem(λ.Cal(λ.ListType, ϒcontent_tree), λ.IntLiteral(0)))
					ϒembed_code = λ.GetItem(ϒmetadata, λ.StrLiteral("embed_code"))
					ϒpcode = func() λ.Object {
						if λv := λ.Calm(ϒmetadata, "get", λ.StrLiteral("asset_pcode")); λ.IsTrue(λv) {
							return λv
						} else {
							return ϒembed_code
						}
					}()
					ϒtitle = λ.GetItem(ϒmetadata, λ.StrLiteral("title"))
					ϒauth_data = λ.GetItem(λ.GetItem(λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
						λ.Mod(λ.GetAttr(ϒself, "_AUTHORIZATION_URL_TEMPLATE", nil), λ.NewTuple(
							ϒpcode,
							ϒembed_code,
						)),
						ϒvideo_id,
					), λ.KWArgs{
						{Name: "headers", Value: λ.Calm(ϒself, "geo_verification_headers")},
						{Name: "query", Value: λ.DictLiteral(map[string]λ.Object{
							"domain": func() λ.Object {
								if λv := ϒdomain; λ.IsTrue(λv) {
									return λv
								} else {
									return λ.StrLiteral("player.ooyala.com")
								}
							}(),
							"supportedFormats": func() λ.Object {
								if λv := ϒsupportedformats; λ.IsTrue(λv) {
									return λv
								} else {
									return λ.StrLiteral("mp4,rtmp,m3u8,hds,dash,smooth")
								}
							}(),
							"embedToken": ϒembed_token,
						})},
					}), λ.StrLiteral("authorization_data")), ϒembed_code)
					ϒurls = λ.NewList()
					ϒformats = λ.NewList()
					ϒstreams = func() λ.Object {
						if λv := λ.Calm(ϒauth_data, "get", λ.StrLiteral("streams")); λ.IsTrue(λv) {
							return λv
						} else {
							return λ.NewList(λ.DictLiteral(map[string]λ.Object{
								"delivery_type": λ.StrLiteral("hls"),
								"url": λ.DictLiteral(map[string]λ.Object{
									"data": λ.Calm(λ.Cal(Ωbase64.ϒb64encode, λ.Calm(λ.Mod(λ.StrLiteral("http://player.ooyala.com/hls/player/all/%s.m3u8"), ϒembed_code), "encode")), "decode"),
								}),
							}))
						}
					}()
					τmp0 = λ.Cal(λ.BuiltinIter, ϒstreams)
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒstream = τmp1
						ϒurl_data = λ.Cal(ϒtry_get, ϒstream, λ.NewFunction("<lambda>",
							[]λ.Param{
								{Name: "x"},
							},
							0, false, false,
							func(λargs []λ.Object) λ.Object {
								var (
									ϒx = λargs[0]
								)
								return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("url")), λ.StrLiteral("data"))
							}), ϒcompat_str)
						if !λ.IsTrue(ϒurl_data) {
							continue
						}
						ϒs_url = λ.Calm(λ.Cal(ϒcompat_b64decode, ϒurl_data), "decode", λ.StrLiteral("utf-8"))
						if λ.IsTrue(func() λ.Object {
							if λv := λ.NewBool(!λ.IsTrue(ϒs_url)); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.NewBool(λ.Contains(ϒurls, ϒs_url))
							}
						}()) {
							continue
						}
						λ.Calm(ϒurls, "append", ϒs_url)
						ϒext = λ.Cal(ϒdetermine_ext, ϒs_url, λ.None)
						ϒdelivery_type = λ.Calm(ϒstream, "get", λ.StrLiteral("delivery_type"))
						if λ.IsTrue(func() λ.Object {
							if λv := λ.Eq(ϒdelivery_type, λ.StrLiteral("hls")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Eq(ϒext, λ.StrLiteral("m3u8"))
							}
						}()) {
							λ.Calm(ϒformats, "extend", λ.Call(λ.GetAttr(ϒself, "_extract_m3u8_formats", nil), λ.NewArgs(
								λ.Cal(Ωre.ϒsub, λ.StrLiteral("/ip(?:ad|hone)/"), λ.StrLiteral("/all/"), ϒs_url),
								ϒembed_code,
								λ.StrLiteral("mp4"),
								λ.StrLiteral("m3u8_native"),
							), λ.KWArgs{
								{Name: "m3u8_id", Value: λ.StrLiteral("hls")},
								{Name: "fatal", Value: λ.False},
							}))
						} else {
							if λ.IsTrue(func() λ.Object {
								if λv := λ.Eq(ϒdelivery_type, λ.StrLiteral("hds")); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.Eq(ϒext, λ.StrLiteral("f4m"))
								}
							}()) {
								λ.Calm(ϒformats, "extend", λ.Call(λ.GetAttr(ϒself, "_extract_f4m_formats", nil), λ.NewArgs(
									λ.Add(ϒs_url, λ.StrLiteral("?hdcore=3.7.0")),
									ϒembed_code,
								), λ.KWArgs{
									{Name: "f4m_id", Value: λ.StrLiteral("hds")},
									{Name: "fatal", Value: λ.False},
								}))
							} else {
								if λ.IsTrue(func() λ.Object {
									if λv := λ.Eq(ϒdelivery_type, λ.StrLiteral("dash")); λ.IsTrue(λv) {
										return λv
									} else {
										return λ.Eq(ϒext, λ.StrLiteral("mpd"))
									}
								}()) {
									λ.Calm(ϒformats, "extend", λ.Call(λ.GetAttr(ϒself, "_extract_mpd_formats", nil), λ.NewArgs(
										ϒs_url,
										ϒembed_code,
									), λ.KWArgs{
										{Name: "mpd_id", Value: λ.StrLiteral("dash")},
										{Name: "fatal", Value: λ.False},
									}))
								} else {
									if λ.IsTrue(λ.Eq(ϒdelivery_type, λ.StrLiteral("smooth"))) {
										λ.Call(λ.GetAttr(ϒself, "_extract_ism_formats", nil), λ.NewArgs(
											ϒs_url,
											ϒembed_code,
										), λ.KWArgs{
											{Name: "ism_id", Value: λ.StrLiteral("mss")},
											{Name: "fatal", Value: λ.False},
										})
									} else {
										if λ.IsTrue(λ.Eq(ϒext, λ.StrLiteral("smil"))) {
											λ.Calm(ϒformats, "extend", λ.Call(λ.GetAttr(ϒself, "_extract_smil_formats", nil), λ.NewArgs(
												ϒs_url,
												ϒembed_code,
											), λ.KWArgs{
												{Name: "fatal", Value: λ.False},
											}))
										} else {
											λ.Calm(ϒformats, "append", λ.DictLiteral(map[string]λ.Object{
												"url": ϒs_url,
												"ext": func() λ.Object {
													if λv := ϒext; λ.IsTrue(λv) {
														return λv
													} else {
														return ϒdelivery_type
													}
												}(),
												"vcodec":    λ.Calm(ϒstream, "get", λ.StrLiteral("video_codec")),
												"format_id": ϒdelivery_type,
												"width":     λ.Cal(ϒint_or_none, λ.Calm(ϒstream, "get", λ.StrLiteral("width"))),
												"height":    λ.Cal(ϒint_or_none, λ.Calm(ϒstream, "get", λ.StrLiteral("height"))),
												"abr":       λ.Cal(ϒint_or_none, λ.Calm(ϒstream, "get", λ.StrLiteral("audio_bitrate"))),
												"vbr":       λ.Cal(ϒint_or_none, λ.Calm(ϒstream, "get", λ.StrLiteral("video_bitrate"))),
												"fps":       λ.Cal(ϒfloat_or_none, λ.Calm(ϒstream, "get", λ.StrLiteral("framerate"))),
											}))
										}
									}
								}
							}
						}
					}
					if λ.IsTrue(func() λ.Object {
						if λv := λ.NewBool(!λ.IsTrue(ϒformats)); !λ.IsTrue(λv) {
							return λv
						} else {
							return λ.NewBool(!λ.IsTrue(λ.Calm(ϒauth_data, "get", λ.StrLiteral("authorized"))))
						}
					}()) {
						panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.Mod(λ.StrLiteral("%s said: %s"), λ.NewTuple(
							λ.GetAttr(ϒself, "IE_NAME", nil),
							λ.GetItem(ϒauth_data, λ.StrLiteral("message")),
						))), λ.KWArgs{
							{Name: "expected", Value: λ.True},
						})))
					}
					λ.Calm(ϒself, "_sort_formats", ϒformats)
					ϒsubtitles = λ.DictLiteral(map[λ.Object]λ.Object{})
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Calm(λ.Calm(λ.Calm(ϒmetadata, "get", λ.StrLiteral("closed_captions_vtt"), λ.DictLiteral(map[λ.Object]λ.Object{})), "get", λ.StrLiteral("captions"), λ.DictLiteral(map[λ.Object]λ.Object{})), "items"))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						τmp2 = τmp1
						ϒlang = λ.GetItem(τmp2, λ.IntLiteral(0))
						ϒsub = λ.GetItem(τmp2, λ.IntLiteral(1))
						ϒsub_url = λ.Calm(ϒsub, "get", λ.StrLiteral("url"))
						if !λ.IsTrue(ϒsub_url) {
							continue
						}
						λ.SetItem(ϒsubtitles, ϒlang, λ.NewList(λ.DictLiteral(map[string]λ.Object{
							"url": ϒsub_url,
						})))
					}
					return λ.DictLiteral(map[string]λ.Object{
						"id":          ϒembed_code,
						"title":       ϒtitle,
						"description": λ.Calm(ϒmetadata, "get", λ.StrLiteral("description")),
						"thumbnail": func() λ.Object {
							if λv := λ.Calm(ϒmetadata, "get", λ.StrLiteral("thumbnail_image")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Calm(ϒmetadata, "get", λ.StrLiteral("promo_image"))
							}
						}(),
						"duration":  λ.Cal(ϒfloat_or_none, λ.Calm(ϒmetadata, "get", λ.StrLiteral("duration")), λ.IntLiteral(1000)),
						"subtitles": ϒsubtitles,
						"formats":   ϒformats,
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_AUTHORIZATION_URL_TEMPLATE": OoyalaBaseIE__AUTHORIZATION_URL_TEMPLATE,
				"_CONTENT_TREE_BASE":          OoyalaBaseIE__CONTENT_TREE_BASE,
				"_PLAYER_BASE":                OoyalaBaseIE__PLAYER_BASE,
				"_extract":                    OoyalaBaseIE__extract,
			})
		}())
		OoyalaIE = λ.Cal(λ.TypeType, λ.StrLiteral("OoyalaIE"), λ.NewTuple(OoyalaBaseIE), func() λ.Dict {
			var (
				OoyalaIE__VALID_URL    λ.Object
				OoyalaIE__real_extract λ.Object
			)
			OoyalaIE__VALID_URL = λ.StrLiteral("(?:ooyala:|https?://.+?\\.ooyala\\.com/.*?(?:embedCode|ec)=)(?P<id>.+?)(&|$)")
			OoyalaIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcontent_tree_url λ.Object
						ϒdomain           λ.Object
						ϒembed_code       λ.Object
						ϒembed_token      λ.Object
						ϒself             = λargs[0]
						ϒsmuggled_data    λ.Object
						ϒsupportedformats λ.Object
						ϒurl              = λargs[1]
						τmp0              λ.Object
					)
					τmp0 = λ.Cal(ϒunsmuggle_url, ϒurl, λ.DictLiteral(map[λ.Object]λ.Object{}))
					ϒurl = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒsmuggled_data = λ.GetItem(τmp0, λ.IntLiteral(1))
					ϒembed_code = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒdomain = λ.Calm(ϒsmuggled_data, "get", λ.StrLiteral("domain"))
					ϒsupportedformats = λ.Calm(ϒsmuggled_data, "get", λ.StrLiteral("supportedformats"))
					ϒembed_token = λ.Calm(ϒsmuggled_data, "get", λ.StrLiteral("embed_token"))
					ϒcontent_tree_url = λ.Add(λ.GetAttr(ϒself, "_CONTENT_TREE_BASE", nil), λ.Mod(λ.StrLiteral("embed_code/%s/%s"), λ.NewTuple(
						ϒembed_code,
						ϒembed_code,
					)))
					return λ.Calm(ϒself, "_extract", ϒcontent_tree_url, ϒembed_code, ϒdomain, ϒsupportedformats, ϒembed_token)
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    OoyalaIE__VALID_URL,
				"_real_extract": OoyalaIE__real_extract,
			})
		}())
		OoyalaExternalIE = λ.Cal(λ.TypeType, λ.StrLiteral("OoyalaExternalIE"), λ.NewTuple(OoyalaBaseIE), func() λ.Dict {
			var (
				OoyalaExternalIE__VALID_URL λ.Object
			)
			OoyalaExternalIE__VALID_URL = λ.StrLiteral("(?x)\n                    (?:\n                        ooyalaexternal:|\n                        https?://.+?\\.ooyala\\.com/.*?\\bexternalId=\n                    )\n                    (?P<partner_id>[^:]+)\n                    :\n                    (?P<id>.+)\n                    (?:\n                        :|\n                        .*?&pcode=\n                    )\n                    (?P<pcode>.+?)\n                    (?:&|$)\n                    ")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": OoyalaExternalIE__VALID_URL,
			})
		}())
	})
}
