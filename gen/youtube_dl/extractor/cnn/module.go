// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * cnn/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/cnn.py
 */

package cnn

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωturner "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/turner"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	CNNArticleIE  λ.Object
	CNNBlogsIE    λ.Object
	CNNIE         λ.Object
	InfoExtractor λ.Object
	TurnerBaseIE  λ.Object
	ϒurl_basename λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		TurnerBaseIE = Ωturner.TurnerBaseIE
		ϒurl_basename = Ωutils.ϒurl_basename
		CNNIE = λ.Cal(λ.TypeType, λ.StrLiteral("CNNIE"), λ.NewTuple(TurnerBaseIE), func() λ.Dict {
			var (
				CNNIE__CONFIG            λ.Object
				CNNIE__VALID_URL         λ.Object
				CNNIE__extract_timestamp λ.Object
				CNNIE__real_extract      λ.Object
			)
			CNNIE__VALID_URL = λ.StrLiteral("(?x)https?://(?:(?P<sub_domain>edition|www|money)\\.)?cnn\\.com/(?:video/(?:data/.+?|\\?)/)?videos?/\n        (?P<path>.+?/(?P<title>[^/]+?)(?:\\.(?:[a-z\\-]+)|(?=&)))")
			CNNIE__CONFIG = λ.DictLiteral(map[string]λ.Object{
				"edition": λ.DictLiteral(map[string]string{
					"data_src":  "http://edition.cnn.com/video/data/3.0/video/%s/index.xml",
					"media_src": "http://pmd.cdn.turner.com/cnn/big",
				}),
				"money": λ.DictLiteral(map[string]string{
					"data_src":  "http://money.cnn.com/video/data/4.0/video/%s.xml",
					"media_src": "http://ht3.cdn.turner.com/money/big",
				}),
			})
			CNNIE__extract_timestamp = λ.NewFunction("_extract_timestamp",
				[]λ.Param{
					{Name: "self"},
					{Name: "video_data"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself       = λargs[0]
						ϒvideo_data = λargs[1]
					)
					_ = ϒself
					_ = ϒvideo_data
					return λ.None
				})
			CNNIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒconfig     λ.Object
						ϒpage_title λ.Object
						ϒpath       λ.Object
						ϒself       = λargs[0]
						ϒsub_domain λ.Object
						ϒurl        = λargs[1]
						τmp0        λ.Object
					)
					τmp0 = λ.Calm(λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl), "groups")
					ϒsub_domain = λ.GetItem(τmp0, λ.IntLiteral(0))
					ϒpath = λ.GetItem(τmp0, λ.IntLiteral(1))
					ϒpage_title = λ.GetItem(τmp0, λ.IntLiteral(2))
					if !λ.Contains(λ.NewTuple(
						λ.StrLiteral("money"),
						λ.StrLiteral("edition"),
					), ϒsub_domain) {
						ϒsub_domain = λ.StrLiteral("edition")
					}
					ϒconfig = λ.GetItem(λ.GetAttr(ϒself, "_CONFIG", nil), ϒsub_domain)
					return λ.Calm(ϒself, "_extract_cvp_info", λ.Mod(λ.GetItem(ϒconfig, λ.StrLiteral("data_src")), ϒpath), ϒpage_title, λ.DictLiteral(map[string]λ.Object{
						"default": λ.DictLiteral(map[string]λ.Object{
							"media_src": λ.GetItem(ϒconfig, λ.StrLiteral("media_src")),
						}),
						"f4m": λ.DictLiteral(map[string]string{
							"host": "cnn-vh.akamaihd.net",
						}),
					}))
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_CONFIG":            CNNIE__CONFIG,
				"_VALID_URL":         CNNIE__VALID_URL,
				"_extract_timestamp": CNNIE__extract_timestamp,
				"_real_extract":      CNNIE__real_extract,
			})
		}())
		CNNBlogsIE = λ.Cal(λ.TypeType, λ.StrLiteral("CNNBlogsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CNNBlogsIE__VALID_URL λ.Object
			)
			CNNBlogsIE__VALID_URL = λ.StrLiteral("https?://[^\\.]+\\.blogs\\.cnn\\.com/.+")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": CNNBlogsIE__VALID_URL,
			})
		}())
		CNNArticleIE = λ.Cal(λ.TypeType, λ.StrLiteral("CNNArticleIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CNNArticleIE__VALID_URL λ.Object
			)
			CNNArticleIE__VALID_URL = λ.StrLiteral("https?://(?:(?:edition|www)\\.)?cnn\\.com/(?!videos?/)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": CNNArticleIE__VALID_URL,
			})
		}())
	})
}
