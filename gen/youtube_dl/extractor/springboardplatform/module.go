// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * springboardplatform/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/springboardplatform.py
 */

package springboardplatform

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError        λ.Object
	InfoExtractor         λ.Object
	SpringboardPlatformIE λ.Object
	ϒint_or_none          λ.Object
	ϒunescapeHTML         λ.Object
	ϒunified_timestamp    λ.Object
	ϒxpath_attr           λ.Object
	ϒxpath_element        λ.Object
	ϒxpath_text           λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ExtractorError = Ωutils.ExtractorError
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒxpath_attr = Ωutils.ϒxpath_attr
		ϒxpath_text = Ωutils.ϒxpath_text
		ϒxpath_element = Ωutils.ϒxpath_element
		ϒunescapeHTML = Ωutils.ϒunescapeHTML
		ϒunified_timestamp = Ωutils.ϒunified_timestamp
		SpringboardPlatformIE = λ.Cal(λ.TypeType, λ.StrLiteral("SpringboardPlatformIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				SpringboardPlatformIE__VALID_URL λ.Object
			)
			SpringboardPlatformIE__VALID_URL = λ.StrLiteral("(?x)\n                    https?://\n                        cms\\.springboardplatform\\.com/\n                        (?:\n                            (?:previews|embed_iframe)/(?P<index>\\d+)/video/(?P<id>\\d+)|\n                            xml_feeds_advanced/index/(?P<index_2>\\d+)/rss3/(?P<id_2>\\d+)\n                        )\n                    ")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": SpringboardPlatformIE__VALID_URL,
			})
		}())
	})
}
