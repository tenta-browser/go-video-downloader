// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * cliprs/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/cliprs.py
 */

package cliprs

import (
	Ωonet "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/onet"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ClipRsIE   λ.Object
	OnetBaseIE λ.Object
)

func init() {
	λ.InitModule(func() {
		OnetBaseIE = Ωonet.OnetBaseIE
		ClipRsIE = λ.Cal(λ.TypeType, λ.StrLiteral("ClipRsIE"), λ.NewTuple(OnetBaseIE), func() λ.Dict {
			var (
				ClipRsIE__VALID_URL    λ.Object
				ClipRsIE__real_extract λ.Object
			)
			ClipRsIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?clip\\.rs/(?P<id>[^/]+)/\\d+")
			ClipRsIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id λ.Object
						ϒinfo_dict  λ.Object
						ϒmvp_id     λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒwebpage    λ.Object
					)
					ϒdisplay_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒdisplay_id)
					ϒmvp_id = λ.Calm(ϒself, "_search_mvp_id", ϒwebpage)
					ϒinfo_dict = λ.Calm(ϒself, "_extract_from_id", ϒmvp_id, ϒwebpage)
					λ.SetItem(ϒinfo_dict, λ.StrLiteral("display_id"), ϒdisplay_id)
					return ϒinfo_dict
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    ClipRsIE__VALID_URL,
				"_real_extract": ClipRsIE__real_extract,
			})
		}())
	})
}
