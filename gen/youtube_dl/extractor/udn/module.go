// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * udn/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/udn.py
 */

package udn

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor  λ.Object
	UDNEmbedIE     λ.Object
	ϒdetermine_ext λ.Object
	ϒint_or_none   λ.Object
	ϒjs_to_json    λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒdetermine_ext = Ωutils.ϒdetermine_ext
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒjs_to_json = Ωutils.ϒjs_to_json
		UDNEmbedIE = λ.Cal(λ.TypeType, λ.StrLiteral("UDNEmbedIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				UDNEmbedIE__PROTOCOL_RELATIVE_VALID_URL λ.Object
				UDNEmbedIE__VALID_URL                   λ.Object
			)
			UDNEmbedIE__PROTOCOL_RELATIVE_VALID_URL = λ.StrLiteral("//video\\.udn\\.com/(?:embed|play)/news/(?P<id>\\d+)")
			UDNEmbedIE__VALID_URL = λ.Add(λ.StrLiteral("https?:"), UDNEmbedIE__PROTOCOL_RELATIVE_VALID_URL)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_PROTOCOL_RELATIVE_VALID_URL": UDNEmbedIE__PROTOCOL_RELATIVE_VALID_URL,
				"_VALID_URL":                   UDNEmbedIE__VALID_URL,
			})
		}())
	})
}
