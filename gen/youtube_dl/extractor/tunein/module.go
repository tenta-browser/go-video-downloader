// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * tunein/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/tunein.py
 */

package tunein

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError    λ.Object
	InfoExtractor     λ.Object
	TuneInBaseIE      λ.Object
	TuneInClipIE      λ.Object
	TuneInProgramIE   λ.Object
	TuneInShortenerIE λ.Object
	TuneInStationIE   λ.Object
	TuneInTopicIE     λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ExtractorError = Ωutils.ExtractorError
		TuneInBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {

			return λ.ClassDictLiteral(map[λ.Object]λ.Object{})
		}())
		TuneInClipIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInClipIE"), λ.NewTuple(TuneInBaseIE), func() λ.Dict {
			var (
				TuneInClipIE__VALID_URL λ.Object
			)
			TuneInClipIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?tunein\\.com/station/.*?audioClipId\\=(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TuneInClipIE__VALID_URL,
			})
		}())
		TuneInStationIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInStationIE"), λ.NewTuple(TuneInBaseIE), func() λ.Dict {
			var (
				TuneInStationIE__VALID_URL λ.Object
				TuneInStationIE_suitable   λ.Object
			)
			TuneInStationIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?tunein\\.com/(?:radio/.*?-s|station/.*?StationId=|embed/player/s)(?P<id>\\d+)")
			TuneInStationIE_suitable = λ.NewFunction("suitable",
				[]λ.Param{
					{Name: "cls"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcls = λargs[0]
						ϒurl = λargs[1]
					)
					return func() λ.Object {
						if λ.IsTrue(λ.Calm(TuneInClipIE, "suitable", ϒurl)) {
							return λ.False
						} else {
							return λ.Calm(λ.Cal(λ.SuperType, TuneInStationIE, ϒcls), "suitable", ϒurl)
						}
					}()
				})
			TuneInStationIE_suitable = λ.Cal(λ.ClassMethodType, TuneInStationIE_suitable)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TuneInStationIE__VALID_URL,
				"suitable":   TuneInStationIE_suitable,
			})
		}())
		TuneInProgramIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInProgramIE"), λ.NewTuple(TuneInBaseIE), func() λ.Dict {
			var (
				TuneInProgramIE__VALID_URL λ.Object
			)
			TuneInProgramIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?tunein\\.com/(?:radio/.*?-p|program/.*?ProgramId=|embed/player/p)(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TuneInProgramIE__VALID_URL,
			})
		}())
		TuneInTopicIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInTopicIE"), λ.NewTuple(TuneInBaseIE), func() λ.Dict {
			var (
				TuneInTopicIE__VALID_URL λ.Object
			)
			TuneInTopicIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?tunein\\.com/(?:topic/.*?TopicId=|embed/player/t)(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TuneInTopicIE__VALID_URL,
			})
		}())
		TuneInShortenerIE = λ.Cal(λ.TypeType, λ.StrLiteral("TuneInShortenerIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				TuneInShortenerIE__VALID_URL λ.Object
			)
			TuneInShortenerIE__VALID_URL = λ.StrLiteral("https?://tun\\.in/(?P<id>[A-Za-z0-9]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": TuneInShortenerIE__VALID_URL,
			})
		}())
	})
}
